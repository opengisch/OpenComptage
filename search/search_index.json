{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenue sur la page de documentation d'OpenComptage.","text":"<p>La documentation est divis\u00e9e en trois parties, accessibles \u00e0 partir du menu. Manuel de l'utilisateur, manuel d'installation et manuel du d\u00e9veloppeur.</p>"},{"location":"development/","title":"Development","text":""},{"location":"development/#data-model","title":"Data model","text":"<p>The data model has been created to easily allow to add functionality to the product e.g. adding new vehicle classes and to be as simple as possible and easily usable into QGIS. It is flexible enough to support natively all the current special cases without write special management code.</p> <p>The data model is created with <code>pgmodeler</code> and is exported into an sql script used by <code>create_db.sh</code> script. To create a new sql from the pgmodeler's model, run the script <code>create_data_model_sql_script.sh</code>.</p> Data model"},{"location":"development/#repository-structure","title":"Repository structure","text":"Directory Content .docker/ docker-compose files to run a development environment (i.e. PostGIS db) or a test environment (i.e. PostGIS db and QGIS to allow using QGIS API in Travis) comptages/ root directory of the QGIS plugin (for more details see the \"Code Structure\" section) db/ contains the sql files to create the database structure and a dump of the initial data docs/ contains the user manual that is published online using Github Pages scripts/ contains useful scripts to launch docker enviroments, run tests, create the database, etc"},{"location":"development/#code-structure","title":"Code structure","text":"<p>The code of the plugin (directory =comptages=) is structured in the following way:</p> Directory /File Content chart/ python package used to generate the charts config/ python package used to generate the device configurations core/ python package with core functionality modules data/ python package used to collect the data from the db to report and chart generation ics/ python package used to manage .ics (calendar) files images/ contains the images used by the plugin importer/ python package with the modules to import data plan/ python package for the plan generation qgissettingmanager/ qgis_setting_manager submodule to manage settings qml/ contains QGIS layer style files report/ python package for the report generation test/ python package with unit and functional tests ui/ contains QT's files with the definition of the user interface dialogs comptages.py plugin main module metadata.txt plugin metadata"},{"location":"installation/","title":"Installation and maintenance","text":""},{"location":"installation/#development-version","title":"Development version","text":"<p>The repository contains a docker-compose configuration to run the database and a QGIS container with the plugin code mounted as volume.</p>"},{"location":"installation/#steps","title":"Steps","text":"<p>Clone this repository with the submodules</p> <pre><code>git clone --recurse-submodules git@github.com:opengisch/OpenComptage.git\n</code></pre> <p>Grant access to the X server</p> <pre><code>xhost +\n</code></pre> <p>Run the containers</p> <pre><code>cd OpenComptage\ndocker-compose up -d\n</code></pre> <p>QGIS should start. Open the plugin manager and enable the plugin <code>comptages</code> and configure the host in the QGIS plugin settings to <code>127.0.0.1</code>. Restart QGIS after changing the settings.</p> <p>Initialize the datamodel from the QGIS's Python Console</p> <pre><code>from django.core.management import call_command\ncall_command('migrate', 'comptages')\n</code></pre> <p>Note</p> <p>Run first the command with the \"--fake\" flag if the database already exists to fake the initial migration <code>call_command('migrate', '--fake', 'comptages', '0001_initial')</code></p> <p>Restart QGIS and import initial data (use \"--clear\" flag to delete data before import)</p> <pre><code>from django.core.management import call_command\ncall_command('importdata')\n</code></pre> <p>OpenComptage is now ready to be used! You can find some demo data into the mounted <code>/test_data/</code> directory of the QGIS container. E.g. in the <code>SWISS10_vbv</code> subdirectory there is the complete year 2021 set of measures for the <code>00107695</code> section in the SWISS10 class.</p>"},{"location":"installation/#windows-deployment","title":"Windows deployment","text":"<p>Requirements:  - PostgreSQL,  - ogr2ogr, psycopg2,  - QGIS installed with OSGEO4W with pip and a GDAL version matching requirements for django</p> <p>Clone this repository with the submodules, fetch all tags and checkout to a  of your choice <pre><code>git clone --recurse-submodules https://github.com/opengisch/OpenComptage.git\ncd OpenComptage\ngit fetch --all --tags --prune\ngit checkout tags/&lt;TAG_NAME&gt; -b &lt;TAG_NAME&gt;\n</code></pre> <p>If updating an existing application, go directly to the Deploying plugin section.</p> <p>If starting from zero, restore a backup of opencomptages database or follow Development version</p>"},{"location":"installation/#deploying-plugin","title":"Deploying plugin","text":"<ol> <li>Look into <code>requirements.txt</code> file and install dependencies by opening QGIS &gt; Python Console:</li> </ol> <pre><code>subprocess.check_call(['python', '-m', 'pip', 'install', '&lt;package_1&gt;', '&lt;package_n*&gt;'])\n</code></pre> <ol> <li>Deploy to your custom qgis plugin repository:</li> </ol> <pre><code>cd .\\scripts\\windows\n.\\deploy.ps1\n</code></pre> <ol> <li> <p>Install plugin from your custom repository.</p> </li> <li> <p>Make sure the user in the plugin settings is owner of the database otherwise migrations will not work.</p> </li> <li> <p>Run migrations. Open Python console in QGIS:</p> </li> </ol> <pre><code>from django.core.management import call_command\ncall_command('migrate', 'comptages')\n</code></pre> <ol> <li>Revert ownership of database if required</li> </ol>"},{"location":"installation/#recalculate-tjm-of-the-counts","title":"Recalculate TJM of the counts","text":"<p>Tjm field of <code>count</code> model is calculated automatically every time new data of the comptage are accepted from the chart dialog. There is also a command to force the plugin to recalculate the Tjm of the counts.</p> <p>Open Python console in QGIS:</p> <pre><code>from django.core.management import call_command\ncall_command('tjmreset')\n</code></pre> <p>It is possible to recalculate only a subset of the counts using the options <code>--min_id</code> and <code>--max_id</code>. For example this command will recalculate only the Tjm of the counts with <code>5 &lt;= id &lt;= 10</code>. Both options are inclusive and can be used alone or together.</p> <pre><code>from django.core.management import call_command\ncall_command('tjmreset', '--min_id', '5', '--max_id', '10')\n</code></pre>"},{"location":"installation/#constraint-option","title":"Constraint option","text":"<p>When an object referenced by a ForeignKey is deleted, Django will emulate the behavior of the SQL constraint specified by the <code>on_delete</code> argument. Django <code>on_delete</code> doesn\u2019t create an actual SQL constraint in the database. Support for database-level cascade options may be implemented later (see https://code.djangoproject.com/ticket/21961 ).</p> <p>That means setting the <code>on_delete</code> constraint on the actual database should be done manually.</p> <p>To get the name of the constraint:</p> <pre><code>select constraint_name from information_schema.key_column_usage where position_in_unique_constraint is not null and table_name = 'count_detail' and column_name = 'id_count'\n</code></pre> <p>To replace the constraint and set <code>on_delete</code> option (replace <code>&lt;CONSTRAINT_NAME&gt;</code> with the actual name received from the previous query):</p> <pre><code>alter table comptages.count_detail\ndrop constraint &lt;CONSTRAINT_NAME&gt;,\nadd constraint &lt;CONSTRAINT_NAME&gt;\n   foreign key (\"id_count\")\n   references \"count\"(id)\n   on delete cascade;\n</code></pre>"},{"location":"user_manual/","title":"Plugin QGIS","text":""},{"location":"user_manual/#barre-doutils","title":"Barre d'outils","text":"<p>Le plugin, une fois install\u00e9, ajoute une barre d'outils \u00e0 l'interface QGIS, compos\u00e9e de plusieurs boutons qui permettent d'effectuer diff\u00e9rentes op\u00e9rations.</p> Barre d'outils du plugin <p>Les outils sont, dans l'ordre :</p> <ul> <li>Connection DB</li> <li>Cr\u00e9er un nouveau comptage</li> <li>Modifier un comptage</li> <li>Importation donn\u00e9es</li> <li>Validation donn\u00e9es</li> <li>Filtrage</li> <li>Importation fichiers ICS</li> <li>Rapport annuel</li> <li>R\u00e9glages</li> </ul>"},{"location":"user_manual/#utilisation","title":"Utilisation","text":""},{"location":"user_manual/#connection-db","title":"Connection DB","text":"Bouton connection DB <p>Le bouton <code>Connection DB</code> ouvre une connexion \u00e0 la base de donn\u00e9es et charge les couches de l'application dans QGIS.</p> Couches dans QGIS"},{"location":"user_manual/#creer-un-nouveau-comptage","title":"Cr\u00e9er un nouveau comptage","text":"Bouton creation nouveau comptage <p>Pour cr\u00e9er un nouveau comptage (\u00e9l\u00e9ment dans la couche <code>comptage</code>), il existe l'outil <code>Cr\u00e9er un nouveau comptage</code> qui simplifie l'op\u00e9ration par rapport \u00e0 l'insertion manuelle dans la table.</p> <p>Pour cr\u00e9er un nouveau comptage \u00e0 l'aide de l'outil, vous devez commencer par s\u00e9lectionner un tron\u00e7on sur la carte en utilisant les outils de s\u00e9lection de g\u00e9om\u00e9trie QGIS normaux. Pour simplifier la recherche du tron\u00e7on \u00e0 s\u00e9lectionner, vous pouvez utiliser l'outil de recherche dans la couche <code>tron\u00e7on</code>.</p> <p>Une fois que vous avez s\u00e9lectionn\u00e9 le tron\u00e7on pour lequel vous voulez cr\u00e9er le comptage, en appuyant sur le bouton <code>Cr\u00e9er un nouveau comptage</code> vous pouvez entrer les donn\u00e9es du comptage et les sauvegarder dans la base de donn\u00e9es.</p> Creation d'un nouveau comptage"},{"location":"user_manual/#modifier-comptage","title":"Modifier comptage","text":"Bouton modifier comptage <p>Apr\u00e8s avoir s\u00e9lectionn\u00e9 un tron\u00e7on sur la carte, appuyer sur le bouton <code>Modifier comptage</code> affiche le tableau d'attributs de la couche <code>comptage</code> avec les comptages du tron\u00e7on s\u00e9lectionn\u00e9 o\u00f9 vous pouvez \u00e9diter les donn\u00e9es du comptage.</p> Modification d'un comptage"},{"location":"user_manual/#importation","title":"Importation","text":"<p>Vous pouvez importer des donn\u00e9es de deux mani\u00e8res diff\u00e9rentes. Soit en sp\u00e9cifiant directement \u00e0 quel comptage ils appartiennent, soit en important un ou plusieurs fichiers, laissant le programme d\u00e9terminer \u00e0 quel comptage ils appartiennent sur base de la date et du tron\u00e7on sur lequel le comptage est effectu\u00e9. Pour importer un seul fichier associ\u00e9 \u00e0 un comptage, utilisez l'action \"Importation\" de la table attributaire de la couche \"comptage\" et s\u00e9lectionnez ensuite le fichier \u00e0 importer.</p> Actions comptage <p>Pour importer un ou plusieurs fichiers et laisser le syst\u00e8me identifier \u00e0 quel comptage ils appartiennent, utilisez le bouton \"Importation\" de la barre d'outils.</p> Bouton importation donn\u00e9es <p>Une fois que les donn\u00e9es ont \u00e9t\u00e9 import\u00e9es, une fen\u00eatre appara\u00eet qui pr\u00e9sente graphiquement les donn\u00e9es import\u00e9es (par heure et voie, par cat\u00e9gorie et par vitesse), de sorte que vous pouvez \u00e9valuer d'un coup d'\u0153il si les donn\u00e9es semblent correctes et d\u00e9cider de les importer d\u00e9finitivement dans la base de donn\u00e9es ou de les \u00e9carter.</p> Validation des donn\u00e9es <p>La fen\u00eatre de validation des donn\u00e9es peut \u00eatre appel\u00e9e \u00e0 l'aide du bouton appropri\u00e9 de la barre d'outils et montrera toutes les donn\u00e9es qui ont \u00e9t\u00e9 import\u00e9es mais pas encore valid\u00e9es.</p> Bouton validation"},{"location":"user_manual/#filtrage","title":"Filtrage","text":"Bouton filtrage <p>Le bouton \"filtrage\" de la barre d'outils permet de filtrer les \"comptages\" qui sont affich\u00e9s sur la carte (couche \"comptage\"). Vous pouvez filtrer par date de d\u00e9but, date de fin, type d'installation (permanente ou p\u00e9riodique), type de capteur (tube, boucle, ...), TJM, axe et secteur.</p> Options filtrage"},{"location":"user_manual/#importation-fichiers-ics","title":"Importation fichiers ICS","text":"Bouton importation fichiers ICS <p>Le bouton \"Importation ICS\" vous permet de charger un fichier calendrier ICS depuis votre ordinateur avec des p\u00e9riodes sp\u00e9ciales d\u00e9finies (vacances et jours f\u00e9ri\u00e9s) \u00e0 prendre en compte dans les rapports.</p>"},{"location":"user_manual/#reglages","title":"R\u00e9glages","text":"Bouton r\u00e9glages <p>Le bouton \"R\u00e9glages\" de la barre d'outils vous permet de sp\u00e9cifier les options du programme. En particulier les donn\u00e9es de connexion avec la base de donn\u00e9es et les r\u00e9pertoires par d\u00e9faut o\u00f9 rechercher ou sauvegarder les fichiers.</p> R\u00e9glages"},{"location":"user_manual/#rapport-annuel","title":"Rapport annuel","text":"Bouton rapport annuel <p>Le bouton \"Rapport annuel\" de la barre d'outils vous permet de g\u00e9n\u00e9rer un rapport annuel d'un tron\u00e7on. Vous pouvez s\u00e9lectionner l'ann\u00e9e et le tron\u00e7on souhait\u00e9s.</p> Options rapport annuel"},{"location":"user_manual/#exporter-la-configuration","title":"Exporter la configuration","text":"<p>Dans la table attributaire de la couche <code>comptage</code>, vous pouvez effectuer des actions sur les comptages pr\u00e9sents. L'une de ces actions est la g\u00e9n\u00e9ration de la configuration de l'appareil de mesure. </p> Actions comptage <p>La configuration g\u00e9n\u00e9r\u00e9e d\u00e9pend du mod\u00e8le de dispositif d\u00e9fini pour le comptage. Vous pouvez ajouter une partie de configuration fixe pour un mod\u00e8le sp\u00e9cifique dans la couche <code>mod\u00e8le</code> champ <code>configuration</code>.</p> Configuration fixe"},{"location":"user_manual/#creer-un-rapport","title":"Cr\u00e9er un rapport","text":"<p>Dans la table attributaire de la couche <code>comptage</code>, vous pouvez effectuer des actions sur les comptages pr\u00e9sents. L'une de ces actions est la g\u00e9n\u00e9ration du rapport du comptage. </p> Actions comptage"},{"location":"user_manual/#creer-un-plan-de-pose","title":"Cr\u00e9er un plan de pose","text":"<p>Dans la table attributaire de la couche <code>comptage</code>, vous pouvez effectuer des actions sur les comptages pr\u00e9sents. L'une de ces actions est la g\u00e9n\u00e9ration du pland de pose. </p> Actions comptage"},{"location":"user_manual/#visualiser-les-graphiques-dun-comptage","title":"Visualiser les graphiques d'un comptage","text":"<p>Dans la table attributaire de la couche <code>comptage</code>, vous pouvez effectuer des actions sur les comptages pr\u00e9sents. L'une de ces actions est la visualisation des graphiques du comptage. </p> Actions comptage <p>Des graphiques sont g\u00e9n\u00e9r\u00e9s et affich\u00e9s dans une fen\u00eatre.</p> Graphiques d'un comptage"},{"location":"user_manual/#ajouter-un-nouveau-automate","title":"Ajouter un nouveau automate","text":"<p>La table <code>device</code> (charg\u00e9e dans la couche automate de QGIS), contient la liste des dispositifs disponibles. Chaque dispositif doit avoir une r\u00e9f\u00e9rence \u00e0 un mod\u00e8le d\u00e9fini dans la table <code>model</code>. Pour ajouter un nouveau dispositif, il suffit d'ajouter dans QGIS un \u00e9l\u00e9ment \u00e0 la table <code>automate</code> (et \u00e9ventuellement \u00e0 la table <code>model</code>).</p>"},{"location":"user_manual/#cas-speciaux","title":"Cas sp\u00e9ciaux","text":"<p>Les installations consid\u00e9r\u00e9es comme des <code>cas speciaux</code>, sont des installations o\u00f9 plusieurs voies de sections diff\u00e9rentes sont mesur\u00e9es \u00e0 partir de la m\u00eame installation. Chaque voie a une relation (foreign key) avec une installation. En attribuant plusieurs voies \u00e0 la m\u00eame installation, il est possible de cr\u00e9er des cas speciaux.  Ces tables ne sont normalement pas charg\u00e9es comme des couches dans QGIS, donc normalement ces changements sont faits directement dans la base de donn\u00e9es.</p> <p>Par exemple, l'installation <code>53409999</code> est compos\u00e9e de 4 voies sur 4 tron\u00e7ons diff\u00e9rentes. Les tron\u00e7ons sont: <code>53410005</code>, <code>53420005</code>, <code>53430005</code> et <code>53440005</code>. Dans la base de donn\u00e9es, les 4 voies ont une relation (foreign key dans le champ id_installation) avec la m\u00eame installation. Si nous regardons les donn\u00e9es de ce cas sp\u00e9cial dans la base de donn\u00e9es, nous verrons quelque chose comme ceci :</p> <pre><code>select l.id, l.id_section, l.id_installation, i.\"name\"from lane as l\njoin installation as i\n    on l.id_installation = i.id\n    where i.name = '53409999'\n</code></pre> id id_section id_installation name 17526 53410005 8770 53409999 17527 53420005 8770 53409999 17528 53430005 8770 53409999 17529 53440005 8770 53409999"},{"location":"user_manual/#ajouter-une-nouvelle-class","title":"Ajouter une nouvelle class","text":"Relation entre classe et cat\u00e9gorie <p>Pour cr\u00e9er une nouvelle classe, il faut cr\u00e9er un \u00e9l\u00e9ment dans la table <code>class</code> et des cat\u00e9gories dans la classe <code>category</code>, puis il faut les relier dans la table <code>class_category</code>.</p>"}]}