# Generated by Django 3.2.5 on 2021-12-17 05:24

from django.db import migrations


def migrate_data(apps, schema_editor):

    count_details = []

    # We can't import the models directly as it may be a newer
    # version than this migration expects. We use the historical version.
    CountAggregateValueCls = apps.get_model('comptages', 'CountAggregateValueCls')
    CountDetail = apps.get_model('comptages', 'CountDetail')

    qs = CountAggregateValueCls.objects.all()
    for i in qs:
        count_details.append(
            CountDetail(
                numbering=1,
                timestamp=i.id_count_aggregate.start,
                file_name=i.id_count_aggregate.file_name,
                import_status=i.id_count_aggregate.import_status,
                id_lane=i.id_count_aggregate.id_lane,
                id_count=i.id_count_aggregate.id_count,
                id_category=i.id_category,
                times=i.value,
                from_aggregate=True,
                )
            )

    CountAggregateValueCnt = apps.get_model('comptages', 'CountAggregateValueCnt')
    qs = CountAggregateValueCnt.objects.all()
    for i in qs:
        count_details.append(
            CountDetail(
                numbering=1,
                timestamp=i.id_count_aggregate.start,
                file_name=i.id_count_aggregate.file_name,
                import_status=i.id_count_aggregate.import_status,
                id_lane=i.id_count_aggregate.id_lane,
                id_count=i.id_count_aggregate.id_count,
                times=i.value,
                from_aggregate=True,
                )
            )

    CountAggregateValueDrn = apps.get_model('comptages', 'CountAggregateValueDrn')
    qs = CountAggregateValueDrn.objects.all()
    for i in qs:
        count_details.append(
            CountDetail(
                numbering=1,
                timestamp=i.id_count_aggregate.start,
                file_name=i.id_count_aggregate.file_name,
                import_status=i.id_count_aggregate.import_status,
                id_lane=i.id_count_aggregate.id_lane,
                id_count=i.id_count_aggregate.id_count,
                times=i.value,
                from_aggregate=True,
                )
            )

    CountAggregateValueLen = apps.get_model('comptages', 'CountAggregateValueLen')
    qs = CountAggregateValueLen.objects.all()
    for i in qs:
        count_details.append(
            CountDetail(
                numbering=1,
                timestamp=i.id_count_aggregate.start,
                length=int((i.low + i.high) / 2),
                file_name=i.id_count_aggregate.file_name,
                import_status=i.id_count_aggregate.import_status,
                id_lane=i.id_count_aggregate.id_lane,
                id_count=i.id_count_aggregate.id_count,
                times=i.value,
                from_aggregate=True,
                )
            )

    CountAggregateValueSpd = apps.get_model('comptages', 'CountAggregateValueSpd')
    qs = CountAggregateValueSpd.objects.all()
    for i in qs:
        count_details.append(
            CountDetail(
                numbering=1,
                timestamp=i.id_count_aggregate.start,
                speed=i.low + 5,
                file_name=i.id_count_aggregate.file_name,
                import_status=i.id_count_aggregate.import_status,
                id_lane=i.id_count_aggregate.id_lane,
                id_count=i.id_count_aggregate.id_count,
                times=i.value,
                from_aggregate=True,
                )
            )

    CountDetail.objects.bulk_create(count_details)


class Migration(migrations.Migration):

    dependencies = [
        ('comptages', '0021_alter_count_tjm'),
    ]

    operations = [
        migrations.RunPython(migrate_data),
        migrations.DeleteModel(name='CountAggregateValueCls'),
        migrations.DeleteModel(name='CountAggregateValueCnt'),
        migrations.DeleteModel(name='CountAggregateValueDrn'),
        migrations.DeleteModel(name='CountAggregateValueLen'),
        migrations.DeleteModel(name='CountAggregateValueSpd'),
        migrations.DeleteModel(name='CountAggregateValueSds'),
        migrations.DeleteModel(name='CountAggregate'),
    ]
